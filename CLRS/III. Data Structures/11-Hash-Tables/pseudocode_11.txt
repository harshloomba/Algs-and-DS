11 Hash Tables
- 11.1 Direct-address tables
- 11.2 Hash tables
- 11.3 HAsh functions 
- 11.4 Open addressing
- 11.5 Perfect hashing

Pseudcode
(11.1)
DIRECT-ADDRESS-SEARCH(T, k)
1. return T[k]

(11.1)
DIRECT-ADDRESS-INSERT(T, x)
1. T[x.key] = x

(11.1)
DIRECT-ADDRESS-DELETE(T,x)
1. T[x.key] = NIL

(11.2)
CHAINED-HASH-INSERT(T,x)
1. insert x at the head of list T[h(x.key)]

(11.2)
CHAINED-HASH-SEARCH(T,k)
1. search for an element with key k in list T[h(k)]

(11.2)
CHAINED-HASH-DELETE(T, x)
1. delete x from the list T[h(x.key)]

(11.4)
HASH-INSERT(T,k)
1. i = 0
2. repeat
3.  j = h(k,i)
4.  if T[j] == NIL
5.      T[j] = k
6.      return j
7.  else i = i + 1
8. until i = m
9. error "hash table overflow" 

(11.4)
HASH-SEARCH(T,k)
1. i = 0
2. repeat 
3.      h = h(k,i)
4.      if T[j] == k    
5.          return j
6.      i = i + 1
7. until T[j] == NIL or i == m
8. return NIL  

Problems:
- 11-1: Longest-probe bound for hashing
- 11-2: Slot-size bound for chaining
- 11-3: Quadratic probing
- 11-4: Hashing and authentication
